buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "se.transmode.gradle:gradle-docker:1.2"
	}
}

plugins {
	id "org.ajoberstar.grgit" version "1.6.0"
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.9'
}

apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'

group = 'com.kakao.minsub.spring'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

ext {
//	springCloudVersion = 'Finchley.RELEASE'
	git = org.ajoberstar.grgit.Grgit.open(project.rootDir)
}

bootJar {
	baseName = 'spring-study'
	version = "0.0.1.${git.head().abbreviatedId}-SNAPSHOT"
	enabled = true
}

task hello << {
	println "${System.properties['spring.profiles.active']}"
}

configurations {
	compile.exclude module: "spring-boot-starter-tomcat"
	compileOnly.exclude module: 'jersey-guava'
}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.cloud:spring-cloud-config:2.0.0.RELEASE'
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-freemarker')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-amqp')
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.cloud:spring-cloud-starter-config')

    compile('com.graphql-java:graphql-spring-boot-starter:5.0.2')
    compile('com.graphql-java:graphiql-spring-boot-starter:5.0.2')
    compile('com.graphql-java:graphql-java-tools:5.2.0')

	compile('org.glassfish.jersey.media:jersey-media-multipart:2.27')
	compile('commons-io:commons-io:2.5')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.glassfish.jersey.ext:jersey-mvc-freemarker:2.24')
	compile('mysql:mysql-connector-java:5.1.38')
	compile 'io.swagger:swagger-jersey2-jaxrs:1.5.11'
	compile('io.swagger.core.v3:swagger-jaxrs2:2.0.2')
	compile('org.hibernate:hibernate-validator:5.2.4.Final')
	compile('net.sf.ehcache:ehcache:2.10.3')
	compile('com.fasterxml.jackson.core:jackson-core:2.9.1')
	compile('com.github.ben-manes.caffeine:caffeine:2.6.2')
	compile('org.apache.kafka:kafka_2.11:1.1.0')
	compile('com.google.guava:guava:21.0')
	compile('org.glassfish.jersey.bundles.repackaged:jersey-guava:2.6')

	compile('mysql:mysql-connector-java')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

//docker {
//	useApi true
//	hostUrl 'http://myserver:4243'
//	apiUsername 'user'
//	apiPassword 'password'
//	apiEmail 'me@mycompany.com'
//}

group = 'jiminsub'

def getTagVersion() {
	return project.findProperty('tagVersion') ?: 'latest'
}

// docker login -u user -p password
// docker pull jiminsub/spring-study
// docker stop spring-study || true && docker rm spring-study || true
// docker run -it -d -p 8080:8080 --name spring-study -v /Users/macmini/app/docker/spring-study/logs:/logs jiminsub/spring-study /bin/bash
task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = bootJar.baseName
	tagVersion = getTagVersion()
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from bootJar
			into stageDir
		}
	}
}
